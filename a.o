[1/28] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Madzia\Documents\Inzynierka\tamagotchi\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf4.4_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v4.4/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Madzia/Documents/Inzynierka/tamagotchi/build/bootloader/bootloader.bin"
Bootloader binary size 0x6940 bytes. 0x6c0 bytes (6%) free.
[2/26] cmd.exe /C "cd /D C:\Users\Madzia\Documents\Inzynierka\tamagotchi\build\esp-idf\main && C:\Espressif\python_env\idf4.4_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v4.4/components/spiffs/spiffsgen.py 0xf0000 C:/Users/Madzia/Documents/Inzynierka/tamagotchi/spiffs C:/Users/Madzia/Documents/Inzynierka/tamagotchi/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len"
[3/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/State.cc.obj
[4/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/StateUtils.cc.obj
[5/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/Gomoku/MiniGameState.cc.obj
[6/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/EndState.cc.obj
[7/26] Building CXX object esp-idf/Joystick/CMakeFiles/__idf_Joystick.dir/Joystick.cc.obj
[8/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/Gomoku/EndGameState.cc.obj
[9/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/Gomoku/PlayerTurnState.cc.obj
[10/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/Gomoku/HostDutiesState.cc.obj
[11/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/Gomoku/WaitingForTurnState.cc.obj
[12/26] Building CXX object esp-idf/GomokuNetworking/CMakeFiles/__idf_GomokuNetworking.dir/GomokuNetworking.cc.obj
[13/26] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[14/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/MainMenuState.cc.obj
[15/26] Building CXX object esp-idf/State/CMakeFiles/__idf_State.dir/StartState.cc.obj
[16/26] Building CXX object esp-idf/Game/CMakeFiles/__idf_Game.dir/Game.cc.obj
[17/26] Linking C static library esp-idf\Game\libGame.a
[18/26] Linking C static library esp-idf\State\libState.a
[19/26] Linking C static library esp-idf\GomokuNetworking\libGomokuNetworking.a
[20/26] Linking C static library esp-idf\Joystick\libJoystick.a
[21/26] Linking C static library esp-idf\main\libmain.a
[22/26] Generating ld/sections.ld
[23/26] Building C object CMakeFiles/Tamagotchi.elf.dir/project_elf_src_esp32.c.obj
cc1.exe: warning: command line option '-std=gnu++17' is valid for C++/ObjC++ but not for C
[24/26] Linking CXX executable Tamagotchi.elf
[25/26] Generating binary image from built executable
esptool.py v3.2-dev
Merged 25 ELF sections
Generated C:/Users/Madzia/Documents/Inzynierka/tamagotchi/build/Tamagotchi.bin
[26/26] cmd.exe /C "cd /D C:\Users\Madzia\Documents\Inzynierka\tamagotchi\build\esp-idf\esptool_py && C:\Espressif\python_env\idf4.4_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v4.4/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Madzia/Documents/Inzynierka/tamagotchi/build/partition_table/partition-table.bin C:/Users/Madzia/Documents/Inzynierka/tamagotchi/build/Tamagotchi.bin"
Tamagotchi.bin binary size 0xfcce0 bytes. Smallest app partition is 0x100000 bytes. 0x3320 bytes (1%) free.
Executing action: all (aliases: build)
Running ninja in directory c:\users\madzia\documents\inzynierka\tamagotchi\build
Executing "ninja all"...

Project build complete. To flash, run this command:
C:\Espressif\python_env\idf4.4_py3.8_env\Scripts\python.exe ..\..\..\..\..\Espressif\frameworks\esp-idf-v4.4\components\esptool_py\esptool\esptool.py -p (PORT) -b 460800 --before default_reset --after hard_reset --chip esp32  write_flash --flash_mode dio --flash_size detect --flash_freq 80m 0x1000 build\bootloader\bootloader.bin 0x8000 build\partition_table\partition-table.bin 0x10000 build\Tamagotchi.bin 0x110000 build\storage.bin
or run 'idf.py -p (PORT) flash'
